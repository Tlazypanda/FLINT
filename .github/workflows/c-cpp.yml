name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  job:
    name: ${{ matrix.os }}-hosted-basic
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgGitUrl: 'https://github.com/moja-global/vcpkg'
            vcpkgGitCommitId: 'b4dcc5ceb589ff8ff966f68881746eb85679c870'
            vcpkgPackages: 'boost-test:x64-windows boost-program-options:x64-windows boost-log:x64-windows turtle:x64-windows zipper:x64-windows poco:x64-windows libpq:x64-windows gdal:x64-windows sqlite3:x64-windows boost-ublas:x64-windows'

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: lukka/get-cmake@latest
      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@master
        id: runvcpkg
        with:
          vcpkgArguments: '${{ matrix.vcpkgPackages }}'
          vcpkgTriplet: '${{ matrix.triplet }}'
          vcpkgDirectory: '${{ github.workspace }}/b/vcpkg'
          vcpkgGitUrl: '${{ matrix.vcpkgGitUrl }}'
          vcpkgGitCommitId: '${{ matrix.vcpkgGitCommitId }}'
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Prints outputs of run-vcpkg task
        run: echo "'${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}' '${{  steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "
      - name: Run CMake+VS
        uses: lukka/run-cmake@v2
        if: contains( matrix.os, 'windows')
        with:
          cmakeGenerator: VS16Win64
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/Source/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildDirectory: '${{ runner.workspace }}/b/vs16'
          cmakeAppendedArgs: '-G"Visual Studio 16 2019" -Ax64'
